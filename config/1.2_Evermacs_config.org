** Apparence
*** Page d'accueil
Configuration de la page d'accueil.
#+BEGIN_SRC emacs-lisp
  ;; Ajout de la page d'accueil
  (use-package dashboard
    :config
    (global-set-key (kbd "C-c a") 'dashboard-refresh-buffer)
    (setq dashboard-banner-logo-title "Bienvenue sur Emacs !")
    (setq dashboard-startup-banner 'logo)
    (setq dashboard-center-content t)
    (setq dashboard-items '((recents . 5)
			    (bookmarks . 5)))
    (setq dashboard-item-shortcuts '((recents . "r")
				     (bookmarks . "m")))
    (setq dashboard-item-names '(("Recent Files:" . "Fichiers récents :")
				 ("Bookmarks:" . "Marque-pages :")))

    ;; Ajout des icons
    (use-package all-the-icons
      :if (display-graphic-p)
      :init
      (unless (member "all-the-icons" (font-family-list))
	(all-the-icons-install-fonts))
      )

    ;; Ajout des icons dans le buffer de complétion (ivy)
    (use-package all-the-icons-completion
      :defer
      :config
      (all-the-icons-completion-mode))

    (setq dashboard-icon-type 'all-the-icons)
    (setq dashboard-heading-icons '((recents . "history")
				    (bookmarks . "bookmark")))
    (setq dashboard-set-file-icons nil)

    ;; Agence la page d'accueil
    (setq dashboard-startupify-list '(
				      dashboard-insert-banner 
				      dashboard-insert-newline 
				      dashboard-insert-banner-title 
				      dashboard-insert-newline 
				      dashboard-insert-navigator 
				      dashboard-insert-items 
				      dashboard-insert-newline 
				      dashboard-insert-footer
				      ))

    ;; Fonction : redémarre emacs
    (defun custom-dashboard-maj ()
      (package-upgrade-all nil)
      (restart-emacs)
      )

    ;; Ajout des boutons d'accueil
    (setq dashboard-navigator-buttons
	  `(
	    ((,(all-the-icons-faicon "home" :height 1.1 :v-adjust 0.0)
	      "Page d'accueil"
	      "Page d'accueil"
	      (lambda (&rest _) (browse-url "www.evermacs.fr")))
	     (,(all-the-icons-octicon "history" :height 1.1 :v-adjust 0.0)
	      "Restaurer Session" 
	      "Restaurer Session" 
	      (lambda (&rest _) (desktop-read))
	      )
	     (,(all-the-icons-faicon "wrench" :height 1.1 :v-adjust 0.0)
	      "Mise à jour" 
	      "Mise à jour et redémarrage" 
	      (lambda (&rest _) (custom-dashboard-maj))
	      )
	     (,(all-the-icons-faicon "question" :height 1.1 :v-adjust 0.0)
	      "" 
	      "Aide" 
	      (lambda (&rest _) (browse-url "https://www.youtube.com/watch?v=dQw4w9WgXcQ"))
	      )
	     )))

    ;; Défini le séparateur de page
    (setq dashboard-page-separator "\n\f\n")

    ;; Défini le message de bas de page
    (setq dashboard-footer-messages 
	  '("Pour en savoir plus sur Evermacs, rendez-vous sur evermacs.fr !"))

    ;; Initialise la page d'accueil
    (dashboard-setup-startup-hook))
#+END_SRC

**** Page Break Lines
Affiche visuellement les changements de page par une barre horizontale.
#+BEGIN_SRC emacs-lisp
  (use-package page-break-lines
    :config
    (page-break-lines-mode t))
#+END_SRC

*** Theme
Active le thème demandé.
#+BEGIN_SRC emacs-lisp
  (use-package modus-themes
    :config
    (load-theme 'modus-operandi-tinted t)
    )
#+END_SRC

*** Extensions
**** Writeroom
Définition d'un mode "focus" pour aider à écrire de manière concentré.
#+BEGIN_SRC emacs-lisp
  (use-package writeroom-mode
    :bind ("C-c o" . writeroom-mode)
    :config
    (setq writeroom-width 0.65)

    ;; Fonction : active le mode writeroom
    (defun variable-pitch-on ()
      (org-superstar-mode 1)
      (variable-pitch-mode))

    ;; Fonction : désactive le mode writeroom
    (defun variable-pitch-off ()
      (if (> (length (window-list)) 1) (winner-undo))
      (org-superstar-mode -1)
      (variable-pitch-mode -1))

    ;; Relie chaque fonction au bon hook
    (add-hook 'writeroom-mode-enable-hook 'variable-pitch-on)
    (add-hook 'writeroom-mode-disable-hook 'variable-pitch-off)
    )
#+END_SRC

**** Dimmer
Diminue l'intensité et la saturation des fenêtres non actives.
#+BEGIN_SRC emacs-lisp
  (use-package dimmer
    :defer
    :config
    (setq dimmer-fraction 0.50)

    ;; Exclue les buffers spéciaux
    (setq dimmer-buffer-exclusion-regexps 
	  '("^ \\*Minibuf-[0-9]+\\*$" "^ \\*Echo.*\\*$" "\*\\([^*]+\\)\*"))

    (dimmer-mode t))
#+END_SRC

*** Mode-line
Utilisation d'un mode-line spécial pour plus de simplicité.
#+BEGIN_SRC emacs-lisp
  (use-package telephone-line
    :config

    ;; Défini la partie droite du mode-line
    (setq telephone-line-rhs
	  '((nil telephone-line-misc-info-segment)
	    (accent telephone-line-simple-minor-mode-segment)
	    (evil telephone-line-airline-position-segment)))

    ;; Défini la partie gauche du mode-line
    (setq telephone-line-lhs
	  '((evil telephone-line-evil-tag-segment)
	    (accent telephone-line-major-mode-segment 
		    telephone-line-vc-segment 
		    telephone-line-erc-modified-channels-segment
		    telephone-line-process-segment)
	    (nil telephone-line-projectile-segment 
		 telephone-line-buffer-segment)))

    ;; Personnalise la couleur
    (set-face-attribute 'telephone-line-accent-inactive 
			nil 
			:foreground "#585858" 
			:background "#dfd9cf" 
			:box "#a59a94")

    (telephone-line-mode 1))
#+END_SRC

**** Hide Minor Mode
#+BEGIN_SRC emacs-lisp
  (use-package delight
    :config
    (delight '(
	       (page-break-lines-mode nil "page-break-lines")
	       ;; (abbrev-mode nil abbrev) ;; real comment
	       (eldoc-mode nil "eldoc")
	       (evil-collection-unimpaired-mode nil 
						"evil-collection-unimpaired")
	       (flyspell-mode "Fly" "flyspell")
	       )))
#+END_SRC

*** Police d'écriture
Change la police d'écriture.
#+BEGIN_SRC emacs-lisp
  (set-face-attribute 'default nil :font "Iosevka-11:weight=light")
  (set-face-attribute 'fixed-pitch nil :font "Iosevka-11:weight=light")
  (set-face-attribute 'variable-pitch nil :font "Iosevka Aile-11:weight=light")
#+END_SRC

*** Autres
Réglages divers et futile, concernant l'apparence et des préférences mineures.
#+BEGIN_SRC emacs-lisp
  (electric-pair-mode t) ;;ferme automatiquement parenthèses et guillemets
  (electric-indent-mode -1)
  (menu-bar-mode -1) ;;cache la barre du menu
  (tool-bar-mode -1) ;; cache la barre d'outils
  (scroll-bar-mode -1) ;; cache la scrolle barre
  (auto-fill-mode t) ;; casse les lignes automatiquement quand approprié

  (setq org-hide-emphasis-markers t) ;;cache les marqueurs gras, surligné etc
  (setq inhibit-startup-message t) ;;supprime le message de bienvenue
  (setq org-pretty-entities t)
  (setq org-fontify-whole-heading-line t)
  (setq org-fontify-quote-and-verse-blocks t)
  (setq
   org-auto-align-tags t
   org-tags-column -77
   org-special-ctrl-a/e t
   org-insert-heading-respect-content nil)

  (setq-default fill-column 100) ;; défini la largeur globale du texte
  (setq-default org-ascii-text-width 110) ;; défini la largeur du texte ASCII
  (setq visible-bell t) ;; converti le son de l'alarme en signal visuel
  ;; finir une phrase avec 1 espace seulement (et pas 2 comme par défaut)
  (setq sentence-end-double-space nil)

  (add-hook 'text-mode-hook 'turn-on-auto-fill)
#+END_SRC
